version: "3.8"

networks:
  fem_monitoring:

volumes:
  fem_grafana_data:
  fem_loki_data:
  fem_opensearch_data:
  fem_prometheus_data:

services:
  fem_jaeger-collector:
    image: jaegertracing/jaeger-collector:1.38
    restart: unless-stopped
    container_name: fem_jaeger-collector
    environment:
      - SPAN_STORAGE_TYPE=elasticsearch
    command: [
        "--es.server-urls=http://fem_opensearch:9200",
        "--es.num-shards=1",
        "--es.num-replicas=0",
        "--es.version=7",
        "--log-level=info"
    ]
    networks:
      - fem_monitoring
    depends_on:
      - fem_opensearch
  fem_jaeger-query:
    image: jaegertracing/jaeger-query:1.38
    restart: unless-stopped
    container_name: fem_jaeger-query
    ports:
      - "26686:16686" #ui, notls
    environment:
      - SPAN_STORAGE_TYPE=elasticsearch
    command: [
        "--es.server-urls=http://fem_opensearch:9200",
        "--es.num-shards=1",
        "--es.num-replicas=0",
        "--es.version=7",
        "--log-level=info"
    ]
    networks:
      - fem_monitoring
    depends_on:
      - fem_opensearch
  fem_opensearch:
    image: opensearchproject/opensearch:2.3.0
    container_name: fem_opensearch
    environment:
      - cluster.name=fem-cluster
      - discovery.type=single-node
      - http.host=0.0.0.0
      - transport.host=127.0.0.1
      - plugins.security.disabled=true # disable tls which is enabled by default
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx6144m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - fem_opensearch_data:/usr/share/opensearch/data
    networks:
      - fem_monitoring
  fem_opensearch_exporter:
    image: prometheuscommunity/elasticsearch-exporter:v1.5.0
    container_name: fem_opensearch_exporter
    command:
     - '--es.uri=http://fem_opensearch:9200'
    restart: unless-stopped
    networks:
      - fem_monitoring
    depends_on:
      - fem_opensearch
  fem_jaeger-es-cleaner:
     image: jaegertracing/jaeger-es-index-cleaner:1.38
     container_name: fem_opensearch-cleaner
     command: [
        "7",
        "http://fem_opensearch:9200"
    ]
     networks:
      - fem_monitoring
     depends_on:
      - fem_opensearch
  fem_prometheus:
    image: prom/prometheus:v2.37.1
    restart: unless-stopped
    container_name: fem_prometheus
    ports:
      - "29090:9090" #ui, notls
    volumes:
      - $PWD/target/config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - fem_prometheus_data:/prometheus
    networks:
      - fem_monitoring
    depends_on:
      - fem_opensearch
  fem_grafana:
    image: grafana/grafana:9.0.9
    restart: unless-stopped
    container_name: fem_grafana
    ports:
      - "23000:3000" #ui, notls
    volumes:
      - fem_grafana_data:/var/lib/grafana
    networks:
      - fem_monitoring
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.entrypoints=https"
      - "traefik.http.routers.grafana.tls=true"
      - "traefik.http.routers.grafana.rule=Host(`fem_grafana`)"
  fem_otel-collector:
    image: otel/opentelemetry-collector-contrib:0.61.0
    container_name: fem_otel-collector
    command: ["--config=/etc/otel-collector-config.yml"]
    volumes:
      - $PWD/target/config/otel-collector-fem-config.yml:/etc/otel-collector-config.yml:ro
      - $PWD/target/certs:/tmp/certs:ro
    ports:
      - "24318:4318"  # grpc, tls
    networks:
      - fem_monitoring
  fem_loki:
    image: grafana/loki:main
    container_name: fem_loki
    command: -config.file=/etc/loki/config.yml
    volumes:
      - $PWD/target/config/loki-config.yml:/etc/loki/config.yml:ro
      - fem_loki_data:/tmp
    ports:
      - 23100:3100 #api, notls
    networks:
      - fem_monitoring
  fem_traefik:
    image: traefik:v2.9.1
    restart: unless-stopped
    container_name: fem_traefik
    ports:
      - "20080:80"
      - "20443:443"
      - "28080:8080"
    networks:
      - fem_monitoring
    volumes:
      - $PWD/target/config/traefik.yml:/etc/traefik/traefik.yml:ro
      - $PWD/target/config/traefik-certs.yml:/etc/traefik/traefik-certs.yml:ro
      - $PWD/target/certs:/etc/traefik/certs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
